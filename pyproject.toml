[project]
name = "secure-auth-system"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "kscardinal", email = "kschang@cardinalhs.net" }
]
requires-python = ">=3.13"
dependencies = [
    "argon2-cffi>=25.1.0",
    "dotenv>=0.9.9",
    "flask>=3.1.2",
    "flask-cors>=6.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "icecream>=2.1.5",
    "mypy>=1.16.1",
    "pipdeptree>=2.26.1",
    "pytest>=8.4.1",
    "pytest-dotenv>=0.5.2",
    "ruff>=0.12.1",
]

### black
[tool.black]
line-length = 132
target-version = ["py313"]


### mypy
[tool.mypy]
files = ["."]
python_version = "3.13"
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "attendance.mongo.*"
disallow_any_generics = false

[[tool.mypy.overrides]]
module = "icecream"
ignore_missing_imports = true

### ruff
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]


# Same as Black.
line-length = 132
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks, and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
#select = ["E4", "E7", "E9", "F"]
select = ["ALL"]
ignore = [
    "ANN101", # missing-type-self
    "D203", # one-blank-line-before-class
    "D213", # multi-line-summary-second-line
    "INP001", # implicit-namespace-package
    "T201", # print
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = [
    #    "ALL",
    "I001", # unsorted-imports
]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]
